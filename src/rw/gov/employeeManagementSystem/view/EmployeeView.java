/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rw.gov.employeeManagementSystem.view;

import java.sql.ResultSet;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import rw.gov.employeeManagementSystem.dao.EmployeeDao;
import rw.gov.employeeManagementSystem.dao.JobDao;
import rw.gov.employeeManagementSystem.model.Employee;

/**
 *
 * @author ZIPTECH LTD
 */
public class EmployeeView extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeView
     */
    public EmployeeView() {
        initComponents();
        allEmpRetrived();
        fillCombBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gender = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        allEmployee = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        employeeBtn = new javax.swing.JButton();
        salariesBtn = new javax.swing.JButton();
        jobBtn = new javax.swing.JButton();
        department = new javax.swing.JButton();
        department1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        empNames = new javax.swing.JTextField();
        radioMale = new javax.swing.JRadioButton();
        radionFemale = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        addEmp = new javax.swing.JButton();
        updateEmp = new javax.swing.JButton();
        deleteEmp = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jobId = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        searchTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        allEmployee1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        summaryBtn = new javax.swing.JButton();

        allEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Names", "Gender", "E-mail", "Job"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(allEmployee);
        if (allEmployee.getColumnModel().getColumnCount() > 0) {
            allEmployee.getColumnModel().getColumn(0).setPreferredWidth(4);
        }

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(0, 204, 153));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        employeeBtn.setBackground(new java.awt.Color(255, 255, 255));
        employeeBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        employeeBtn.setForeground(new java.awt.Color(0, 153, 153));
        employeeBtn.setText("Employee");
        employeeBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.black));
        employeeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        employeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeBtnActionPerformed(evt);
            }
        });
        jPanel4.add(employeeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 229, 272, 40));

        salariesBtn.setBackground(new java.awt.Color(255, 255, 255));
        salariesBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        salariesBtn.setForeground(new java.awt.Color(0, 153, 153));
        salariesBtn.setText("Salaries");
        salariesBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.black));
        salariesBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        salariesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salariesBtnActionPerformed(evt);
            }
        });
        jPanel4.add(salariesBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 275, 272, 37));

        jobBtn.setBackground(new java.awt.Color(255, 255, 255));
        jobBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jobBtn.setForeground(new java.awt.Color(0, 153, 153));
        jobBtn.setText("Jobs");
        jobBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.black));
        jobBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobBtnActionPerformed(evt);
            }
        });
        jPanel4.add(jobBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 318, 272, 39));

        department.setBackground(new java.awt.Color(255, 255, 255));
        department.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        department.setForeground(new java.awt.Color(0, 153, 153));
        department.setText("Departments");
        department.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.black));
        department.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        department.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentActionPerformed(evt);
            }
        });
        jPanel4.add(department, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 368, 272, 37));

        department1.setBackground(new java.awt.Color(255, 255, 255));
        department1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        department1.setForeground(new java.awt.Color(0, 153, 153));
        department1.setText("Home");
        department1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.black));
        department1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        department1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                department1ActionPerformed(evt);
            }
        });
        jPanel4.add(department1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 186, 272, 37));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Niagara Engraved", 1, 48)); // NOI18N
        jLabel4.setText("Employees");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("All Employee");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 170, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Names:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 95, 127, -1));

        empNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empNamesActionPerformed(evt);
            }
        });
        jPanel2.add(empNames, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 95, 150, 29));

        gender.add(radioMale);
        radioMale.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        radioMale.setText("Male");
        jPanel2.add(radioMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 131, -1, -1));

        gender.add(radionFemale);
        radionFemale.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        radionFemale.setText("Female");
        jPanel2.add(radionFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 131, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("E-mail:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 174, 127, -1));
        jPanel2.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 174, 152, 29));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Job-Id");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 209, 127, -1));

        addEmp.setBackground(new java.awt.Color(0, 51, 255));
        addEmp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addEmp.setText("+ Add");
        addEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmpActionPerformed(evt);
            }
        });
        jPanel2.add(addEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, 99, 35));

        updateEmp.setBackground(new java.awt.Color(0, 153, 0));
        updateEmp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateEmp.setText("Update");
        updateEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEmpActionPerformed(evt);
            }
        });
        jPanel2.add(updateEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, 99, 35));

        deleteEmp.setBackground(new java.awt.Color(204, 0, 0));
        deleteEmp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteEmp.setText("Delete");
        deleteEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEmpActionPerformed(evt);
            }
        });
        jPanel2.add(deleteEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 130, 99, 35));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 65, 147, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Gender:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 141, 127, -1));

        jobId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select Job --" }));
        jobId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobIdActionPerformed(evt);
            }
        });
        jPanel2.add(jobId, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 209, 152, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("search by name");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 131, -1));
        jPanel2.add(searchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 260, 120, -1));

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        jPanel2.add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 260, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Add Employee");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 170, -1));

        allEmployee1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Names", "Gender", "E-mail", "Job"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allEmployee1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allEmployee1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(allEmployee1);
        if (allEmployee1.getColumnModel().getColumnCount() > 0) {
            allEmployee1.getColumnModel().getColumn(0).setPreferredWidth(4);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 0, 700, 680));

        jLabel1.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jLabel1.setText("     EPMS");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 270, -1));

        summaryBtn.setBackground(new java.awt.Color(255, 255, 255));
        summaryBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        summaryBtn.setForeground(new java.awt.Color(0, 153, 153));
        summaryBtn.setText("Summary");
        summaryBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.black));
        summaryBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        summaryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryBtnActionPerformed(evt);
            }
        });
        jPanel4.add(summaryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 272, 37));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmpActionPerformed
        if (allEmployee1.getSelectedRow() != -1) {
            JOptionPane.showMessageDialog(this, "DisSelect selected row");
        } else if (gender.getSelection() == null) {
            JOptionPane.showMessageDialog(this, "Select gender");
        } else if (jobId.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Select a Job id");
        } else if (empNames.getText().equals("") || empNames.getText().length() <= 4) {
            JOptionPane.showMessageDialog(this, "Names Is not valid \n Make sure that the name is not empty and  \n  Make sure the length is above 4 characters");
        } else if (email.getText().equals("") || !isValidEmail(email.getText())) {
            JOptionPane.showMessageDialog(this, "Email is not Valid");
        } else {
            Employee newEmployee = new Employee();

            newEmployee.setNames(empNames.getText());
            if (radioMale.isSelected()) {
                newEmployee.setGender(radioMale.getText());
            } else if (radionFemale.isSelected()) {
                newEmployee.setGender(radionFemale.getText());
            } else {
                newEmployee.setGender("Other");
            }
            newEmployee.setEmail(email.getText());
            int theJobId = Integer.parseInt(jobId.getSelectedItem().toString());
            newEmployee.setJob_id(theJobId);

            EmployeeDao empDao = new EmployeeDao();
            Integer rowAffected = empDao.register(newEmployee);

            if (rowAffected != null) {
                JOptionPane.showMessageDialog(this, "New Employee saved");
                empNames.setText("");
                email.setText("");
                jobId.setSelectedIndex(0);
                allEmpRetrived();
            } else {
                JOptionPane.showMessageDialog(this, "Employee not saved");
            }
        }

    }//GEN-LAST:event_addEmpActionPerformed

    public static boolean isValidEmail(String email) {
        String regex = "^[\\w!#$%&'*+/=?^`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?$";
        return Pattern.matches(regex, email);
    }

    private void allEmpRetrived() {
        EmployeeDao empDao = new EmployeeDao();

        ResultSet rs = empDao.allEmp();
        DefaultTableModel tbModel = (DefaultTableModel) allEmployee1.getModel();
        tbModel.setRowCount(0);

        try {
            while (rs.next()) {
                String id = rs.getString("id");
                String names = rs.getString("names");
                String gender = rs.getString("gender");
                String email = rs.getString("email");
                String name = rs.getString("jId");

                String tData[] = {id, names, gender, email, name};

                tbModel.addRow(tData);

            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void fillCombBox() {
        JobDao jobDao = new JobDao();
        ResultSet rs = jobDao.allJobs();
        try {
            while (rs.next()) {
                jobId.addItem(rs.getString("id").toString());
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }
    private void allEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allEmployeeMouseClicked
        int selectedRow = allEmployee1.getSelectedRow();
        DefaultTableModel tbModel = (DefaultTableModel) allEmployee1.getModel();
        empNames.setText(tbModel.getValueAt(selectedRow, 1).toString());
        String gender = tbModel.getValueAt(selectedRow, 2).toString();
        if (gender.equals("Male")) {
            radioMale.setSelected(true);
        } else if (gender.equals("Female")) {
            radionFemale.setSelected(true);
        }
        email.setText(tbModel.getValueAt(selectedRow, 3).toString());
        jobId.setSelectedItem(tbModel.getValueAt(selectedRow, 4).toString());
    }//GEN-LAST:event_allEmployeeMouseClicked

    private void updateEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEmpActionPerformed
        if (allEmployee1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Select a row to Update");
        } else if (empNames.getText().equals("") || empNames.getText().length() <= 4) {
            JOptionPane.showMessageDialog(this, "Names Is not valid \n Make sure that the name is not empty and  \n  Make sure the length is above 4 characters");
        } else if (email.getText().equals("") || !isValidEmail(email.getText())) {
            JOptionPane.showMessageDialog(this, "Email is not Valid");
        } else {
            try {
                int selectedRow = allEmployee1.getSelectedRow();
                DefaultTableModel tbModel = (DefaultTableModel) allEmployee1.getModel();
                int theId = Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString());

                Employee TheEmployee = new Employee();
                TheEmployee.setId(theId);
                TheEmployee.setNames(empNames.getText());
                if (radioMale.isSelected()) {
                    TheEmployee.setGender(radioMale.getText());
                } else if (radionFemale.isSelected()) {
                    TheEmployee.setGender(radionFemale.getText());
                } else {
                    TheEmployee.setGender("Other");
                }
                TheEmployee.setEmail(email.getText());
                int theJobId = Integer.parseInt(jobId.getSelectedItem().toString());
                TheEmployee.setJob_id(theJobId);

                EmployeeDao theEmployeeDao = new EmployeeDao();
                Integer rowAffected = theEmployeeDao.update(TheEmployee);

                if (rowAffected != null) {
                    JOptionPane.showMessageDialog(this, "Employee Updated");
                    empNames.setText("");
                    email.setText("");
                    jobId.setSelectedIndex(0);
                    allEmpRetrived();
                } else {
                    JOptionPane.showMessageDialog(this, "Employee not updated");
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_updateEmpActionPerformed

    private void deleteEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEmpActionPerformed

        if (allEmployee1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Select a row to Delete");
        } else {
            int choice = JOptionPane.showConfirmDialog(null, "Are U sure To delete", "confirm", JOptionPane.YES_NO_OPTION);
            if (choice == JOptionPane.YES_OPTION) {

                try {
                    int selectedRow = allEmployee1.getSelectedRow();
                    DefaultTableModel tbModel = (DefaultTableModel) allEmployee1.getModel();
                    int theId = Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString());
                    EmployeeDao theEmployeeDao = new EmployeeDao();
                    Integer rowAffected = theEmployeeDao.delete(theId);

                    if (rowAffected != null) {
                        JOptionPane.showMessageDialog(this, "Employee Deleted");
                        empNames.setText("");
                        email.setText("");
                        jobId.setSelectedIndex(0);
                        allEmpRetrived();
                    } else {
                        JOptionPane.showMessageDialog(this, "Employee not Deleted");
                    }

                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }

    }//GEN-LAST:event_deleteEmpActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        EmployeeDao empDao = new EmployeeDao();
        DefaultTableModel tbModel = (DefaultTableModel) allEmployee1.getModel();

        try {
            if (searchTxt.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Search Can't be Empty");
                searchTxt.setText("");
            } else {
                ResultSet rs = empDao.searchEmp(searchTxt.getText());
                if (rs.isBeforeFirst()) {
                    tbModel.setRowCount(0);
                    while (rs.next()) {
                        String id = rs.getString("id");
                        String names = rs.getString("names");
                        String gender = rs.getString("gender");
                        String email = rs.getString("email");
                        String name = rs.getString("jId");

                        String tData[] = {id, names, gender, email, name};

                        tbModel.addRow(tData);
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "No Results");
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void jobIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jobIdActionPerformed

    private void employeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeBtnActionPerformed
        EmployeeView empView = new EmployeeView();
        empView.show();

        dispose();
    }//GEN-LAST:event_employeeBtnActionPerformed

    private void salariesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salariesBtnActionPerformed
        SalaryView salary = new SalaryView();
        salary.show();

        dispose();
    }//GEN-LAST:event_salariesBtnActionPerformed

    private void jobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobBtnActionPerformed
        JobView job = new JobView();
        job.show();

        dispose();
    }//GEN-LAST:event_jobBtnActionPerformed

    private void departmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentActionPerformed
        DepartmentView department = new DepartmentView();
        department.show();

        dispose();
    }//GEN-LAST:event_departmentActionPerformed

    private void department1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_department1ActionPerformed
        Home home = new Home();
        home.show();

        dispose();
    }//GEN-LAST:event_department1ActionPerformed

    private void empNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empNamesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empNamesActionPerformed

    private void allEmployee1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allEmployee1MouseClicked
        int selectedRow = allEmployee1.getSelectedRow();
        DefaultTableModel tbModel = (DefaultTableModel) allEmployee1.getModel();
        empNames.setText(tbModel.getValueAt(selectedRow, 1).toString());
        String gender = tbModel.getValueAt(selectedRow, 2).toString();
        if (gender.equals("Male")) {
            radioMale.setSelected(true);
        } else if (gender.equals("Female")) {
            radionFemale.setSelected(true);
        }
        email.setText(tbModel.getValueAt(selectedRow, 3).toString());
        jobId.setSelectedItem(tbModel.getValueAt(selectedRow, 4).toString());
    }//GEN-LAST:event_allEmployee1MouseClicked

    private void summaryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryBtnActionPerformed
        Summary summary = new Summary();
        summary.show();

        dispose();
    }//GEN-LAST:event_summaryBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEmp;
    private javax.swing.JTable allEmployee;
    private javax.swing.JTable allEmployee1;
    private javax.swing.JButton deleteEmp;
    private javax.swing.JButton department;
    private javax.swing.JButton department1;
    private javax.swing.JTextField email;
    private javax.swing.JTextField empNames;
    private javax.swing.JButton employeeBtn;
    private javax.swing.ButtonGroup gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton jobBtn;
    private javax.swing.JComboBox<String> jobId;
    private javax.swing.JRadioButton radioMale;
    private javax.swing.JRadioButton radionFemale;
    private javax.swing.JButton salariesBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JButton summaryBtn;
    private javax.swing.JButton updateEmp;
    // End of variables declaration//GEN-END:variables
}
